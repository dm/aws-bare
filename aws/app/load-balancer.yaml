---

Description: Load Balancer
AWSTemplateFormatVersion: 2010-09-09

Parameters:
  AppStackName:
    Description: App stack name
    Type: String

  FoundationStackName:
    Description: Foundation stack name
    Type: String

  PublicDomain:
    Description: Domain Name to create new NS subdomain entries
    Type: String

  PublicFQDN:
    Description: Public Fully Qualified Domain Name
    Type: String

Resources:
  SecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: !Sub "${AppStackName}--ALB"
      SecurityGroupIngress:
        - CidrIp: "0.0.0.0/0"
          IpProtocol: "TCP"
          FromPort: 443
          ToPort: 443
      VpcId:
        Fn::ImportValue: !Sub "${FoundationStackName}--VpcId"

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
        - Fn::ImportValue: !Sub "${FoundationStackName}--SubnetPublicA"
        - Fn::ImportValue: !Sub "${FoundationStackName}--SubnetPublicB"
      SecurityGroups:
        - !Ref SecurityGroup

  LoadBalancerDNS:
    DependsOn: LoadBalancer
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: !Sub "${PublicDomain}."
      Comment: DNS entry for LoadBalancer
      RecordSets:
      - Name: !Sub "${PublicFQDN}."
        Type: A
        AliasTarget:
          HostedZoneId: !GetAtt LoadBalancer.CanonicalHostedZoneID
          DNSName: !GetAtt LoadBalancer.DNSName

  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      Port: 443
      Protocol: HTTPS
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    DependsOn: LoadBalancer
    Properties:
      VpcId:
        Fn::ImportValue: !Sub "${FoundationStackName}--VpcId"
      Port: 80
      Protocol: HTTP
      Matcher:
        HttpCode: 200-299
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 30

  ListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      ListenerArn: !Ref LoadBalancerListener
      Priority: 1
      Conditions:
        - Field: path-pattern
          Values:
            - /
      Actions:
        - TargetGroupArn: !Ref TargetGroup
          Type: forward


Outputs:
  TargetGroup:
    Value: !Ref TargetGroup

  ServiceUrl:
    Description: Elastic Load Balancer URL
    Value: !Sub http://${LoadBalancer.DNSName}

  SecurityGroup:
    Value: !Ref SecurityGroup
