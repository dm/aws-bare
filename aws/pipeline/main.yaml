---

AWSTemplateFormatVersion: "2010-09-09"
Description: >
  DevOps AWS Continuous Delivery
  Create CodePipeline continuous delivery pipeline for AWS CloudFormation stacks.
  Uses Foundation bucket artifacts to create stacks and changesets.

Parameters:
  ProjectName:
    Description: Project Name
    Type: String

  NameSuffix:
    Description: Stack name suffix
    Type: String

  Environment:
    Default: tst
    Description: Stack environment
    Type: String

  FoundationBucket:
    Description: Foundation S3 Bucket
    Type: String

  InfraDevBucket:
    Description: InfraDev S3 Bucket
    Type: String

  BuildArtifactsBucket:
    Description: Build S3 Bucket
    Type: String

  # Github settings for Pipeline source
  GithubBranch:
    Default: develop
    Type: String

  GithubOAuthToken:
    Type: String

  GithubOwner:
    Default: dm
    Type: String

  GithubRepo:
    Default: aws-bare
    Type: String

Resources:
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref BuildArtifactsBucket
        Type: S3
      DisableInboundStageTransitions: []
      Name: !Join [ '-', [ !Ref ProjectName, !Ref NameSuffix, 'pipeline'] ]
      RoleArn: !GetAtt [RolePipeline, Arn]
      Stages:

        - Name: Source
          Actions:
            - Name: InfraDevPipelineSource
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              Configuration:
                Branch: !Ref GithubBranch
                OAuthToken: !Ref GithubOAuthToken
                Owner: !Ref GithubOwner
                Repo: !Ref GithubRepo
              RunOrder: 1
              OutputArtifacts:
                - Name: PipelineTemplate
            - Name: TemplateConfigSource
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: S3
                Version: '1'
              Configuration:
                S3Bucket: !Ref 'InfraDevBucket'
                S3ObjectKey: !Join [ '', [ 'pipeline/config/', !Ref ProjectName, '-', !Ref NameSuffix, '-', 'foundation', '.zip'] ]
              OutputArtifacts:
                - Name: TemplateSource
              RunOrder: 2

        - Name: DevStage
          Actions:
            - Name: CreateDevStack
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: PipelineTemplate
                - Name: TemplateSource
              Configuration:
                ActionMode: CREATE_UPDATE
                RoleArn: !GetAtt [RoleCfn, Arn]
                StackName: !Join [ '-', [ !Ref ProjectName, 'dev', !Ref NameSuffix, 'foundation'] ]
                TemplateConfiguration: "TemplateSource::config.dev.json"
                TemplatePath: "PipelineTemplate::aws/foundation/main.yaml"
              RunOrder: 1
            - Name: ApproveDevStack
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: '1'
              Configuration:
                CustomData: !Sub 'Create changeset against the Staging Stack?'
              RunOrder: 2

        - Name: StgStage
          Actions:
            - Name: CreateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: TemplateSource
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                ChangeSetName: !Join [ '-', [ !Ref ProjectName, 'dev-stg', !Ref NameSuffix, 'changeset'] ]
                RoleArn: !GetAtt [RoleCfn, Arn]
                StackName: !Join [ '-', [ !Ref ProjectName, 'stg', !Ref NameSuffix, 'foundation'] ]
                TemplateConfiguration: "TemplateSource::config.stg.json"
                TemplatePath: "PipelineTemplate::aws/foundation/main.yaml"
              RunOrder: 1
            - Name: ApproveChangeSet
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: '1'
              Configuration:
                CustomData: !Sub 'New changeset on Staging stack. Deploy changes?'
              RunOrder: 2
            - Name: ExecuteChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: !Join [ '-', [ !Ref ProjectName, 'dev-stg', !Ref NameSuffix, 'changeset'] ]
                RoleArn: !GetAtt [RoleCfn, Arn]
                StackName: !Join [ '-', [ !Ref ProjectName, 'stg', !Ref NameSuffix, 'foundation'] ]
              RunOrder: 3
            - Name: ApproveStgStack
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: '1'
              Configuration:
                CustomData: !Sub 'Create changeset against the Production Stack?'
              RunOrder: 4

        - Name: ProdStage
          Actions:
            - Name: CreateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: TemplateSource
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                ChangeSetName: !Join [ '-', [ !Ref ProjectName, 'stg-prd', !Ref NameSuffix, 'changeset'] ]
                RoleArn: !GetAtt [RoleCfn, Arn]
                StackName: !Join [ '-', [ !Ref ProjectName, 'prd', !Ref NameSuffix, 'foundation'] ]
                TemplateConfiguration: "TemplateSource::config.prd.json"
                TemplatePath: "PipelineTemplate::aws/foundation/main.yaml"
              RunOrder: 1
            - Name: ApproveChangeSet
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: '1'
              Configuration:
                CustomData: !Sub 'New changeset on Production stack. Deploy changes?'
              RunOrder: 2
            - Name: ExecuteChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: !Join [ '-', [ !Ref ProjectName, 'stg-prd', !Ref NameSuffix, 'changeset'] ]
                RoleArn: !GetAtt [RoleCfn, Arn]
                StackName: !Join [ '-', [ !Ref ProjectName, 'prd', !Ref NameSuffix, 'foundation'] ]
              RunOrder: 3

  RoleCfn:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [cloudformation.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: RoleCfn
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - 'ec2:*'
                Effect: Allow
                Resource: '*'

  RolePipeline:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [codepipeline.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: RolePipeline
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                - 'cloudformation:CreateChangeSet'
                - 'cloudformation:CreateStack'
                - 'cloudformation:DeleteChangeSet'
                - 'cloudformation:DeleteStack'
                - 'cloudformation:DescribeChangeSet'
                - 'cloudformation:DescribeStacks'
                - 'cloudformation:ExecuteChangeSet'
                - 'cloudformation:SetStackPolicy'
                - 'cloudformation:UpdateStack'
                - 'iam:PassRole'
                - 's3:*'
                Effect: Allow
                Resource: '*'
